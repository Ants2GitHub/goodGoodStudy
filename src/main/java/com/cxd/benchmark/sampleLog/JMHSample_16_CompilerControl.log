# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53669:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_16_CompilerControl.baseline

# Run progress: 0.00% complete, ETA 00:02:30
# Fork: 1 of 1
objc[46324]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10ae144c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10ae984e0). One of the two will be used. Which one is undefined.
Iteration   1: 0.365 ns/op
Iteration   2: 0.358 ns/op
Iteration   3: 0.370 ns/op


Result "com.cxd.benchmark.JMHSample_16_CompilerControl.baseline":
  0.364 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (0.358, 0.364, 0.370), stdev = 0.006
  CI (99.9%): [0.255, 0.473] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53669:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_16_CompilerControl.blank

# Run progress: 20.00% complete, ETA 00:02:05
# Fork: 1 of 1
objc[46331]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x1067644c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1067e84e0). One of the two will be used. Which one is undefined.
Iteration   1: 0.375 ns/op
Iteration   2: 0.432 ns/op
Iteration   3: 0.352 ns/op


Result "com.cxd.benchmark.JMHSample_16_CompilerControl.blank":
  0.386 ±(99.9%) 0.751 ns/op [Average]
  (min, avg, max) = (0.352, 0.386, 0.432), stdev = 0.041
  CI (99.9%): [≈ 0, 1.137] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53669:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_16_CompilerControl.dontinline

# Run progress: 40.00% complete, ETA 00:01:33
# Fork: 1 of 1
objc[46340]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x1054854c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1055094e0). One of the two will be used. Which one is undefined.
Iteration   1: 2.520 ns/op
Iteration   2: 2.521 ns/op
Iteration   3: 2.143 ns/op


Result "com.cxd.benchmark.JMHSample_16_CompilerControl.dontinline":
  2.395 ±(99.9%) 3.975 ns/op [Average]
  (min, avg, max) = (2.143, 2.395, 2.521), stdev = 0.218
  CI (99.9%): [≈ 0, 6.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53669:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_16_CompilerControl.exclude

# Run progress: 60.00% complete, ETA 00:01:02
# Fork: 1 of 1
objc[46345]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10e26e4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10e2f24e0). One of the two will be used. Which one is undefined.
Iteration   1: 94.947 ns/op
Iteration   2: 105.016 ns/op
Iteration   3: 89.686 ns/op


Result "com.cxd.benchmark.JMHSample_16_CompilerControl.exclude":
  96.549 ±(99.9%) 142.110 ns/op [Average]
  (min, avg, max) = (89.686, 96.549, 105.016), stdev = 7.790
  CI (99.9%): [≈ 0, 238.659] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=53669:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: <none>
# Measurement: 3 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_16_CompilerControl.inline

# Run progress: 80.00% complete, ETA 00:00:31
# Fork: 1 of 1
objc[46353]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10b6264c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10b6aa4e0). One of the two will be used. Which one is undefined.
Iteration   1: 0.379 ns/op
Iteration   2: 0.375 ns/op
Iteration   3: 0.349 ns/op


Result "com.cxd.benchmark.JMHSample_16_CompilerControl.inline":
  0.368 ±(99.9%) 0.296 ns/op [Average]
  (min, avg, max) = (0.349, 0.368, 0.379), stdev = 0.016
  CI (99.9%): [0.072, 0.664] (assumes normal distribution)


# Run complete. Total time: 00:02:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                Mode  Cnt   Score     Error  Units
JMHSample_16_CompilerControl.baseline    avgt    3   0.364 ±   0.109  ns/op
JMHSample_16_CompilerControl.blank       avgt    3   0.386 ±   0.751  ns/op
JMHSample_16_CompilerControl.dontinline  avgt    3   2.395 ±   3.975  ns/op
JMHSample_16_CompilerControl.exclude     avgt    3  96.549 ± 142.110  ns/op
JMHSample_16_CompilerControl.inline      avgt    3   0.368 ±   0.296  ns/op

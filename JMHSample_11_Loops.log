# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureRight

# Run progress: 0.00% complete, ETA 00:11:40
# Fork: 1 of 1
objc[40030]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10ee6f4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10eef34e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 3.205 ns/op
# Warmup Iteration   2: 2.675 ns/op
# Warmup Iteration   3: 2.616 ns/op
# Warmup Iteration   4: 2.643 ns/op
# Warmup Iteration   5: 2.610 ns/op
Iteration   1: 2.613 ns/op
Iteration   2: 2.648 ns/op
Iteration   3: 3.016 ns/op
Iteration   4: 3.744 ns/op
Iteration   5: 2.731 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureRight":
  2.950 ±(99.9%) 1.813 ns/op [Average]
  (min, avg, max) = (2.613, 2.950, 3.744), stdev = 0.471
  CI (99.9%): [1.137, 4.763] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_1

# Run progress: 14.29% complete, ETA 00:10:08
# Fork: 1 of 1
objc[40045]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x106d0e4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x106d924e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 2.883 ns/op
# Warmup Iteration   2: 2.764 ns/op
# Warmup Iteration   3: 2.654 ns/op
# Warmup Iteration   4: 2.675 ns/op
# Warmup Iteration   5: 2.732 ns/op
Iteration   1: 2.798 ns/op
Iteration   2: 2.815 ns/op
Iteration   3: 2.672 ns/op
Iteration   4: 2.710 ns/op
Iteration   5: 2.680 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_1":
  2.735 ±(99.9%) 0.258 ns/op [Average]
  (min, avg, max) = (2.672, 2.735, 2.815), stdev = 0.067
  CI (99.9%): [2.477, 2.993] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_10

# Run progress: 28.57% complete, ETA 00:08:25
# Fork: 1 of 1
objc[40059]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10d11a4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10d19e4e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.344 ns/op
# Warmup Iteration   2: 0.327 ns/op
# Warmup Iteration   3: 0.301 ns/op
# Warmup Iteration   4: 0.301 ns/op
# Warmup Iteration   5: 0.303 ns/op
Iteration   1: 0.299 ns/op
Iteration   2: 0.323 ns/op
Iteration   3: 0.307 ns/op
Iteration   4: 0.317 ns/op
Iteration   5: 0.310 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_10":
  0.311 ±(99.9%) 0.035 ns/op [Average]
  (min, avg, max) = (0.299, 0.311, 0.323), stdev = 0.009
  CI (99.9%): [0.276, 0.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_100

# Run progress: 42.86% complete, ETA 00:06:44
# Fork: 1 of 1
objc[40074]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10917b4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10a9a84e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.038 ns/op
# Warmup Iteration   2: 0.036 ns/op
# Warmup Iteration   3: 0.036 ns/op
# Warmup Iteration   4: 0.035 ns/op
# Warmup Iteration   5: 0.035 ns/op
Iteration   1: 0.035 ns/op
Iteration   2: 0.035 ns/op
Iteration   3: 0.035 ns/op
Iteration   4: 0.034 ns/op
Iteration   5: 0.034 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_100":
  0.035 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.034, 0.035, 0.035), stdev = 0.001
  CI (99.9%): [0.033, 0.036] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_1000

# Run progress: 57.14% complete, ETA 00:05:03
# Fork: 1 of 1
objc[40086]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x1006c54c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1007494e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.040 ns/op
# Warmup Iteration   2: 0.041 ns/op
# Warmup Iteration   3: 0.038 ns/op
# Warmup Iteration   4: 0.037 ns/op
# Warmup Iteration   5: 0.038 ns/op
Iteration   1: 0.037 ns/op
Iteration   2: 0.037 ns/op
Iteration   3: 0.037 ns/op
Iteration   4: 0.037 ns/op
Iteration   5: 0.037 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_1000":
  0.037 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.037, 0.037, 0.037), stdev = 0.001
  CI (99.9%): [0.037, 0.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_10000

# Run progress: 71.43% complete, ETA 00:03:22
# Fork: 1 of 1
objc[40103]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x10ddfd4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x10de814e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.023 ns/op
# Warmup Iteration   2: 0.023 ns/op
# Warmup Iteration   3: 0.022 ns/op
# Warmup Iteration   4: 0.023 ns/op
# Warmup Iteration   5: 0.023 ns/op
Iteration   1: 0.022 ns/op
Iteration   2: 0.023 ns/op
Iteration   3: 0.022 ns/op
Iteration   4: 0.024 ns/op
Iteration   5: 0.023 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_10000":
  0.023 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (0.022, 0.023, 0.024), stdev = 0.001
  CI (99.9%): [0.020, 0.026] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_74, Java HotSpot(TM) 64-Bit Server VM, 25.74-b02
# VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61782:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.cxd.benchmark.JMHSample_11_Loops.measureWrong_100000

# Run progress: 85.71% complete, ETA 00:01:41
# Fork: 1 of 1
objc[40115]: Class JavaLaunchHelper is implemented in both /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/bin/java (0x104d8c4c0) and /Library/Java/JavaVirtualMachines/jdk1.8.0_74.jdk/Contents/Home/jre/lib/libinstrument.dylib (0x1065a84e0). One of the two will be used. Which one is undefined.
# Warmup Iteration   1: 0.021 ns/op
# Warmup Iteration   2: 0.021 ns/op
# Warmup Iteration   3: 0.024 ns/op
# Warmup Iteration   4: 0.022 ns/op
# Warmup Iteration   5: 0.021 ns/op
Iteration   1: 0.021 ns/op
Iteration   2: 0.021 ns/op
Iteration   3: 0.021 ns/op
Iteration   4: 0.021 ns/op
Iteration   5: 0.021 ns/op


Result "com.cxd.benchmark.JMHSample_11_Loops.measureWrong_100000":
  0.021 ±(99.9%) 0.001 ns/op [Average]
  (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
  CI (99.9%): [0.020, 0.021] (assumes normal distribution)


# Run complete. Total time: 00:11:46

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               Mode  Cnt  Score    Error  Units
JMHSample_11_Loops.measureRight         avgt    5  2.950 ±  1.813  ns/op
JMHSample_11_Loops.measureWrong_1       avgt    5  2.735 ±  0.258  ns/op
JMHSample_11_Loops.measureWrong_10      avgt    5  0.311 ±  0.035  ns/op
JMHSample_11_Loops.measureWrong_100     avgt    5  0.035 ±  0.001  ns/op
JMHSample_11_Loops.measureWrong_1000    avgt    5  0.037 ±  0.001  ns/op
JMHSample_11_Loops.measureWrong_10000   avgt    5  0.023 ±  0.003  ns/op
JMHSample_11_Loops.measureWrong_100000  avgt    5  0.021 ±  0.001  ns/op
